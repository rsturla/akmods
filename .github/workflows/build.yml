name: Build kmods

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0,12 * * *'
  pull_request:
  workflow_dispatch:

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    name: Build kmods
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        fedora-version: [39, 40, stable, testing]
        kmod-name: [nvidia]
        kmod-version: [550]
    env:
      IMAGE_NAME: akmods/${{ matrix.kmod-name }}
      FEDORA_VERSION: ${{ matrix.fedora-version }}

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Generate Image Metadata
        id: generate-meta
        shell: bash
        run: |
          tags=()
          tags+=("${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.fedora-version }}-${{ matrix.kmod-version }}")
          tags+=("${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.fedora-version }}-${{ matrix.kmod-version }}-$(date +%Y%m%d%H%M%S)")
          tags+=("${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.fedora-version }}-${{ matrix.kmod-version }}-${GITHUB_SHA::7}")

          echo "tags=${tags[*]}" >> $GITHUB_OUTPUT
          concat_tags=$(IFS=, ; echo "${tags[*]}")
          echo "concat_tags=$concat_tags" >> $GITHUB_OUTPUT

      - name: Fetch akmods signing key
        run: |
          echo "${{ secrets.AKMODS_PRIVATE_KEY }}" > _certs/private_key.priv

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3

      - name: Login to GHCR
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get CoreOS Kernel Information
        if: ${{ env.FEDORA_VERSION == 'stable' || env.FEDORA_VERSION == 'testing' }}
        uses: rsturla/eternal-main/.github/actions/get-coreos-kernel@main
        id: get-coreos-kernel
        with:
          coreos-stream: ${{ env.FEDORA_VERSION }}

      - name: Set CoreOS Environment Variables
        if: ${{ env.FEDORA_VERSION == 'stable' || env.FEDORA_VERSION == 'testing' }}
        run: |
          echo "COREOS_KERNEL=${{ steps.get-coreos-kernel.outputs.coreos-kernel-release }}" >> $GITHUB_ENV
          echo "FEDORA_VERSION=${{ steps.get-coreos-kernel.outputs.coreos-repo-version }}" >> $GITHUB_ENV

      - name: Build Image
        id: build-image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5
        with:
          file: ./Containerfile
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.generate-meta.outputs.concat_tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            KMOD_NAME=${{ matrix.kmod-name }}
            KMOD_VERSION=${{ matrix.kmod-version }}
            FEDORA_VERSION=${{ env.FEDORA_VERSION }}
            KERNEL_VERSION=${{ env.COREOS_KERNEL }}

  check:
    needs: [build]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Exit on failure
        if: ${{ needs.build.result == 'failure' }}
        shell: bash
        run: exit 1

      - name: Exit on success
        shell: bash
        run: exit 0
